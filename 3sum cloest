//先排序，然后左右夹逼。时间复杂度O(n^2), 空间复杂度O(1)
class Solution {
public:
    int threeSumClosest(vector<int> &num, int target) {
        int result = 0;
        int min_gap = INT_MAX;
        
        sort (num.begin(), num.end());
        
        auto last = num.end();
        for(auto a = num.begin(); a < prev(last, 2); a++)
        {
            auto b = next(a);
            auto c = prev(last);
            while (b < c)
            {
                const int sum = *a + *b + *c;
                const int gap = abs (target - sum);
                if(gap < min_gap)
                {
                    min_gap = gap;
                    result = sum;
                }
                if (sum < target)
                {
                    b++;
                }
                else
                {
                    c--;
                }
            }
        }
        
        return result;
    }
};
