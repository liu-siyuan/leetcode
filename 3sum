class Solution {
public:
    vector<vector<int> > threeSum(vector<int> &num) {
        vector<vector<int>> result;
        const int target = 0;
        if (num.size() < 3) //for size<3 num set
        {
            return result;
        }
        sort(num.begin(), num.end());
        
        auto last = num.end();
        for (auto a = num.begin(); a < prev(last, 2); ++a) //abc are pointers
        {
            if (a > num.begin() && *a == *prev(a)) //important! or TLE
            {
                continue;
            }
            auto b = next (a);
            auto c = prev (last);
            while (b < c)
            {
                if ( *a + *b + *c < target)
                {
                    ++b;
                }
                else if ( *a + *b + *c > target)
                {
                    --c;
                }
                else
                {
                    result.push_back ({*a, *b, *c});
                    ++b;
                    --c;   
                    //while (b<c && *b == *prev(b)) ++b;
                    //while (b<c && *c == *next(c)) --c;
                }
            }
        }
        sort (result.begin(), result.end());
        result.erase (unique(result.begin(), result.end()), result.end()); //erase dupblicates
        return result;
    }
};
