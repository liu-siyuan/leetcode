//O(n^2), 用Multimap 将ab,cd分别捆绑运算查找。空间O(n^2)
class Solution {
public:
    vector<vector<int> > fourSum(vector<int> &num, int target) {
        vector<vector<int>> result;
        
        if (num.size() < 4)
        {
            return result;
        }
        
        sort (num.begin(), num.end());
        unordered_multimap<int, pair<int, int>> cache;
        
        for (auto i = 0; i != num.size()-1; i++)
        {
            for(auto j = i+1; j != num.size(); j++)
            {
                cache.insert(make_pair(num[i] + num[j], make_pair(i, j)));
            }
        }
        
        for (auto i = cache.begin(); i != cache.end(); i++)
        {
            int x = target - i->first;
            auto range = cache.equal_range(x);
            for(auto j = range.first; j != range.second; j++)
            {
                auto a = i->second.first;
                auto b = i->second.second;
                auto c = j->second.first;
                auto d = j->second.second;
                if (a!=c && a!=d && b!=c && b!=d)
                {
                    vector<int> temp = {num[a], num[b], num[c], num[d]};
                    sort (temp.begin(), temp.end());
                    result.push_back(temp);
                }
            }
        }
        
        sort (result.begin(), result.end());
        result.erase(unique(result.begin(), result.end()), result.end());
        return result;
    }
};
