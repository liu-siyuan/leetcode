class Solution {
public:
    vector<int> twoSum(vector<int> &numbers, int target) {
        unordered_map<int, int> mapping;
        vector<int> result;
        
        //initial
        for (int i = 0; i < numbers.size(); i++)
        {
            mapping[numbers[i]] = i;// watch out map's set value;
        }
        
        for (int i = 0; i < numbers.size(); i++)
        {
            int difference = target - numbers[i];
            if ((mapping.find(difference) != mapping.end()) && (mapping[difference] != i))
            {
                result.push_back(i + 1);
                //result.push_back(mapping[i]+1);//careful need to return index
                result.push_back(mapping[difference]+1);
                break;
            }
        }
        return result;
        
    }
};
